version: '3'

services:
  redis:
    container_name: redaudioapi-redis
    image: redis:5.0
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    env_file:
      - .env
    networks:
      - redaudioapi-net
    volumes:
      - redaudioapi-vol-redis:/data
    restart: unless-stopped

  postgres:
    container_name: redaudioapi-postgres
    image: postgres:12.0
    env_file:
      - .env
    volumes:
      - ./scripts:/docker-entrypoint-initdb.d
      - redaudioapi-vol-postgresql:/data/postgres
    networks:
      - redaudioapi-net
    restart: unless-stopped

  pgadmin:
    container_name: redaudioapi-pgadmin
    image: dpage/pgadmin4:latest
    env_file:
      - .env
    volumes:
       - redaudioapi-vol-pgadmin:/root/.pgadmin
    ports:
      - 5050:5050
    networks:
      - redaudioapi-net
    restart: unless-stopped

  api:
    container_name: redaudioapi-api
    image: drapersniper/redbot-global-api:latest
    env_file:
      - .env
    environment:
      RED_API_DATABASE: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_containerv2/${POSTGRES_DB}
      REDIS_CACHED_DATA: redis://redaudioapi-redis/0
    networks:
      - redaudioapi-net
    depends_on:
      - postgres
      - redis
    ports:
      - 8000:8000
    restart: unless-stopped
    links:
      - redis
      - postgres

networks:
  redaudioapi-net:
    driver: bridge

volumes:
  redaudioapi-vol-postgresql:
    external: true
  redaudioapi-vol-pgadmin:
  redaudioapi-vol-redis:
